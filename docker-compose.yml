version: "3.7"

services:
    postgresdb:
        image: postgres:alpine
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: restapi
        container_name: postgresdb
        volumes:
            - pgdata:/var/lib/postgresql/data
            - pgconf:/etc/postgresql
            - pglog:/var/log/postgresql
        ports:
            - "5432:5432"
        networks:
            - restapi-postgres-pgadmin-redis-network

    pgadmin:
        image: dpage/pgadmin4
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: restapi@admin.com
            PGADMIN_DEFAULT_PASSWORD: restapi
            PGADMIN_LISTEN_PORT: 443
        container_name: pgadmin4
        ports:
            - "6543:443"
        depends_on:
            - postgresdb
        networks:
            - restapi-postgres-pgadmin-redis-network

    redis:
        image: redis
        restart: unless-stopped
        ports:
            - '6379:6379'
        container_name: 'redis'
        command: 'redis-server --requirepass redis2020'
        networks:
            - restapi-postgres-pgadmin-redis-network

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        restart: unless-stopped
        ports:
            - 9200:9200
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        environment:
            - xpack.monitoring.enabled=true
            - xpack.watcher.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
        networks:
            - elastic

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.6.2
        restart: unless-stopped
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch
        environment:
            - ELASTICSEARCH_URL=http://localhost:9200
        networks:
            - elastic

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        restart: unless-stopped
        networks: 
            - broker-kafka
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:latest
        restart: unless-stopped
        networks: 
            - broker-kafka
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    kafdrop:
        image: obsidiandynamics/kafdrop:latest
        restart: unless-stopped
        networks: 
            - broker-kafka
        depends_on:
            - kafka
        ports:
            - 19000:9000
        environment:
            KAFKA_BROKERCONNECT: kafka:29092

networks:
    restapi-postgres-pgadmin-redis-network:
        driver: bridge
    elastic:
        driver: bridge
    broker-kafka:
        driver: bridge

volumes:
    pgdata:
        driver: local
    pgconf:
        driver: local
    pglog:
        driver: local
    elasticsearch-data:
        driver: local